# Docusign envelopes are signable things
class DocusignEnvelopeGenerator < DocusignBaseService
  attr_reader :email_body, :email_subject, :envelope_id, :envelope_status, :envelope_status_at, :envelope_url, :signers, :template_id

  # The API supports multiple signers. For now we'll just support one.
  def initialize(email_body: nil, email_subject:, signer_email:, signer_name:, signer_role:, template_id:)
    @email_subject = email_subject
    @signers = [{
      email: signer_email,
      embedded: true,
      name: signer_name,
      role_name: signer_role,
    }]
    @template_id = template_id
  end

  def perform
    response = docusign_send(
      :create_envelope_from_template,
      docusign_params_create_envelope
    )
    raise (response["message"] || response["errorCode"]) if response["errorCode"]
    @envelope_id = response["envelopeId"]
    @envelope_uri = response["uri"] # sic
    @envelope_status = response["status"]
    @envelope_status_at = response["statusDateTime"]
    @envelope_id
  end

  # Generated by #perform
  def envelope_path
    @envelope_uri
  end

  private

  def docusign_params_create_envelope
    {
      status: 'sent',
      email: {
        subject: email_subject,
        body: email_body
      },
      template_id: template_id,
      signers: signers,
    }
  end
end
