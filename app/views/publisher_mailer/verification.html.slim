/ Sent as soon as a publisher fills out the first step.
/ This email can be forwarded to a webmaster or IT peep.
- content_for(:title) do
  h3= I18n.t("publisher_mailer.verification.title")

p.hint= I18n.t("publishers.verification_help_definition")
p.hint= I18n.t("publishers.verification_help_purpose")

h4= I18n.t("publishers.verification_option_public_file")
ol
  li
    = "#{I18n.t("publisher_mailer.verification.download_attached_file")}: brave-payments-verification.txt"
  li
    = I18n.t("publishers.verification_option_public_file_help_directory", directory: publisher_verification_file_directory(@publisher))
  li
    = I18n.t("publishers.verification_option_public_file_help_upload")
  li
    = I18n.t("publishers.verification_option_public_file_help_confirm")
    = " "
    = link_to(publisher_verification_file_url(@publisher), publisher_verification_file_url(@publisher), target: "_blank")
  li
    = I18n.t("publisher_mailer.verification.click_verify")
    
- if publisher_can_generate_dns_record?(@publisher)
  h4.option-dns-record
    = I18n.t("publishers.verification_option_dns_record")
  p
    strong.attribute
      = I18n.t("publishers.verification_option_dns_record_name")
    span= @publisher.brave_publisher_id
    span.hint= " #{I18n.t("publishers.verification_option_dns_record_name_help")}"
  p
    strong.attribute
      = I18n.t("publishers.verification_option_dns_record_type")
    span TXT
  p
    strong.attribute
      = I18n.t("publishers.verification_option_dns_record_value")
    span= publisher_verification_dns_record(@publisher)

h4= I18n.t("publisher_mailer.verification.access_link_help_header")
p.header-help
  = I18n.t("publisher_mailer.verification.access_link_help_body")

p.hint
  span.attribute= "#{I18n.t("publisher_mailer.shared.contact_help")}:"
  = link_to(Rails.application.secrets[:support_email], Rails.application.secrets[:support_email])
